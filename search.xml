<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git使用技巧——发布Clone仓库</title>
      <link href="/36680.html"/>
      <url>/36680.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="note info">            <p>以前没咋使用过Git，但是自从建了博客后就用的好频繁。所以水一篇文章记录记录Git的用法哈哈哈~~</p>          </div><h2 id="首先clone需要的项目"><a href="#首先clone需要的项目" class="headerlink" title="首先clone需要的项目"></a>首先clone需要的项目</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 代码地址</span><br></pre></td></tr></table></figure><h2 id="进入项目的目录里面"><a href="#进入项目的目录里面" class="headerlink" title="进入项目的目录里面"></a>进入项目的目录里面</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd 目录名称</span><br></pre></td></tr></table></figure><h2 id="删掉所有原来的git信息（一直回车）"><a href="#删掉所有原来的git信息（一直回车）" class="headerlink" title="删掉所有原来的git信息（一直回车）"></a>删掉所有原来的git信息（一直回车）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -r .git</span><br></pre></td></tr></table></figure><h2 id="初始化-git"><a href="#初始化-git" class="headerlink" title="初始化.git"></a>初始化.git</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h2 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><h2 id="将本地代码添加进仓库"><a href="#将本地代码添加进仓库" class="headerlink" title="将本地代码添加进仓库"></a>将本地代码添加进仓库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><h2 id="把文件提交进仓库"><a href="#把文件提交进仓库" class="headerlink" title="把文件提交进仓库"></a>把文件提交进仓库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;想咋填咋填看你自己&quot;</span><br></pre></td></tr></table></figure><h2 id="在GitHub网站上新建一个仓库，不要生成readme-md"><a href="#在GitHub网站上新建一个仓库，不要生成readme-md" class="headerlink" title="在GitHub网站上新建一个仓库，不要生成readme.md"></a>在GitHub网站上新建一个仓库，不要生成readme.md</h2><h2 id="关联远程库"><a href="#关联远程库" class="headerlink" title="关联远程库"></a>关联远程库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin 远程库地址</span><br></pre></td></tr></table></figure><h2 id="提交代码"><a href="#提交代码" class="headerlink" title="提交代码"></a>提交代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --set-upstream origin master</span><br></pre></td></tr></table></figure><div class="note success">            <p>总结完毕~~</p>          </div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
            <tag> 技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android avd manager unable解决方案</title>
      <link href="/57831.html"/>
      <url>/57831.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="note info">            <p>闲来无事 看看b站 突然对Android开发有了兴趣然后·····记录一下当时出现的小问题</p>          </div><h1 id="avd-manager-unable解决办法"><a href="#avd-manager-unable解决办法" class="headerlink" title="avd manager unable解决办法"></a>avd manager unable解决办法</h1><h3 id="步骤一-打开windows-defender防火墙页面"><a href="#步骤一-打开windows-defender防火墙页面" class="headerlink" title="步骤一: 打开windows defender防火墙页面"></a>步骤一: 打开windows defender防火墙页面</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/peaceplace/CDN/img/%E9%98%B2%E7%81%AB%E5%A2%99.png" alt="防火墙页面"></p><h3 id="步骤二-打开允许应用或功能通过windows-defender防火墙"><a href="#步骤二-打开允许应用或功能通过windows-defender防火墙" class="headerlink" title="步骤二: 打开允许应用或功能通过windows defender防火墙"></a>步骤二: 打开允许应用或功能通过windows defender防火墙</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/peaceplace/CDN/img/%E5%8B%BE%E9%80%89.png" alt="允许的应用"></p><h3 id="步骤三-选择更改设置，然后选择允许其他应用，找到Androidsdk-platform-tools中的adb-exe"><a href="#步骤三-选择更改设置，然后选择允许其他应用，找到Androidsdk-platform-tools中的adb-exe" class="headerlink" title="步骤三: 选择更改设置，然后选择允许其他应用，找到Androidsdk/platform-tools中的adb.exe"></a>步骤三: 选择更改设置，然后选择允许其他应用，找到Androidsdk/platform-tools中的adb.exe</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/peaceplace/CDN/img/%E6%B7%BB%E5%8A%A0.png" alt="浏览"></p><h3 id="步骤四-看步骤二的图片，将adb-exe的专用，公用复选框打上对勾然后确定就搞定啦！！！"><a href="#步骤四-看步骤二的图片，将adb-exe的专用，公用复选框打上对勾然后确定就搞定啦！！！" class="headerlink" title="步骤四: 看步骤二的图片，将adb.exe的专用，公用复选框打上对勾然后确定就搞定啦！！！~"></a>步骤四: 看步骤二的图片，将adb.exe的专用，公用复选框打上对勾然后确定就搞定啦！！！~</h3><div class="note success">            <p>好了 又可以开始折腾这新东西了</p>          </div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> AVD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云+hexo搭建个人博客教程（基于centos7.8）</title>
      <link href="/35661.html"/>
      <url>/35661.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="note warning">            <p>此教程默认你会一些基础的linux系统命令，譬如cd,mkdir, chmod等，以及基础的windows系统常用的cmd命令，如果不清楚这些命令，建议你请不要继续看下去~</p>          </div><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><ol><li><p>拥有一台阿里云的服务器和已经购买好域名且操作系统镜像为centos7以上</p> <div class="note default">            <p>这里默认你已经买好域名且已经实名认证</p>          </div></li><li><p>本次教程所需要的软件<br> a. FileZilla (用于上传和下载服务器文件)</p><blockquote><p><a href="https://filezilla-project.org/download.php?type=client">https://filezilla-project.org/download.php?type=client</a>  </p></blockquote><p> b. Putty (SSH/Telent客户端，用于连接服务器的终端)</p><blockquote><p><a href="https://github.com/larryli/PuTTY/releases">https://github.com/larryli/PuTTY/releases</a>  </p></blockquote><p> c. git (用于发布Hexo博客到服务器端的软件)</p><blockquote><p><a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p></blockquote></li></ol><p>一切准备就绪后就开始正式的搭建之旅吧~</p><h1 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h1><h2 id="在本地计算机安装Hexo环境"><a href="#在本地计算机安装Hexo环境" class="headerlink" title="在本地计算机安装Hexo环境"></a>在本地计算机安装Hexo环境</h2><p> 博主本地环境：Windows 10 （64位）  </p><ol><li><p>安装Node.js<br> 自行去Node.js官网下载Windows（X64）长期支持版（LTS）按提示逐步安装。安装完成后打开windows自带的cmd窗口输入以下命令查看版本号验证是否安装成功。    </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\用户名&gt; node -v</span><br><span class="line">C:\Users\用户名&gt; npm -v</span><br></pre></td></tr></table></figure></li><li><p>在自己电脑上的D盘或E盘创建名为”myblog”的文件夹</p></li><li><p>选中文件夹鼠标右击选择”Git Bash Here”  </p><p> <img src= "/img/loading.gif" data-lazy-src="https://wx1.sbimg.cn/2020/08/01/PEaoY.jpg" alt="右击选择" title="右击选择红框内容"></p></li><li><p>在弹出的CMD框中输入  </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p> 此命令是用来安装hexo在创建的文件夹中  </p></li><li><p>Hexo安装完成后，在myblog文件夹下新建myblogs项目，并且对其进行初始化的操作  </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init myblogs</span><br><span class="line">cd myblogs</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>此时，会在myblog的文件夹下新建一个名为myblogs的文件夹，并且还会在此文件夹下生成相应的项目文件，如图所示<br> <img src= "/img/loading.gif" data-lazy-src="https://wx2.sbimg.cn/2020/08/01/PEvqA.png" alt="生成的文件">  </p></li><li><p>返回到git的窗口中，输入以下命令即可在本地启动hexo服务  </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>等待出现”INFO  Hexo is running at <a href="http://localhost:4000/">http://localhost:4000</a> . Press Ctrl+C to stop.”后<br>打开浏览器，在浏览器地址输入  </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost:4000</span><br></pre></td></tr></table></figure><p>即可访问基于Hexo的个人博客主页了~<br> <img src= "/img/loading.gif" data-lazy-src="https://wx1.sbimg.cn/2020/08/01/PEUEV.jpg" alt="个人博客本地主页">  </p></li></ol><div class="note success">            <p>目前为止本地计算机的操作暂告一段落  </p>          </div><h2 id="服务器端准备工作"><a href="#服务器端准备工作" class="headerlink" title="服务器端准备工作"></a>服务器端准备工作</h2><div class="note warning">            <p>此时默认你会使用putty连接服务器且能够在阿里云服务器的控制台添加安全组和更改root密码   </p>          </div><h3 id="在服务器上安装nginx"><a href="#在服务器上安装nginx" class="headerlink" title="在服务器上安装nginx"></a>在服务器上安装nginx</h3><p>因为我们需要用nginx作为我们web服务器，所以我们要先安装nginx服务。具体操作如下：<br>使用root用户远程登录阿里云服务器后，使用yum命令进行安装，首先需安装nginx需要的相关的依赖库~   </p><ol><li>安装gcc gcc-c++<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc gcc-c++</span><br></pre></td></tr></table></figure></li><li>安装PCRE库  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y pcre pcre-devel</span><br></pre></td></tr></table></figure></li><li>安装openssl、zlib、gcc依赖<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y zlib zlib-devel</span><br><span class="line">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure></li><li>下载nginx安装包<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c https:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.10.1.tar.gz</span><br></pre></td></tr></table></figure></li><li>将安装包解压到/usr/local/目录下<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf nginx-1.10.1.tar.gz -C &#x2F;usr&#x2F;local</span><br></pre></td></tr></table></figure></li><li>进入/usr/local目录，确认nginx是否解压到该目录下，进入nginx-1.10.1的目录中，会发现有一个./configure的可执行文件，执行该配置文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local</span><br><span class="line">ls</span><br><span class="line">cd nginx-1.10.1&#x2F;</span><br><span class="line">.&#x2F;configure</span><br></pre></td></tr></table></figure></li><li>编译并安装nginx<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li><li>查找nginx安装目录且进入安装目录<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">whereis nginx</span><br><span class="line">cd &#x2F;usr&#x2F;local&#x2F;nginx</span><br><span class="line">ls</span><br></pre></td></tr></table></figure></li><li>防火墙开启80端口访问（此时你应在阿里云控制台中创建安全组开启所有IP进方向80端口可访问）默认linux不会开启80端口<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld  &#x2F;&#x2F;检查防火墙是否开启，若显示failed则为开启</span><br><span class="line">systemctl start firewalld &#x2F;&#x2F;开启为start关闭则改为stop</span><br></pre></td></tr></table></figure><h3 id="服务器nginx配置"><a href="#服务器nginx配置" class="headerlink" title="服务器nginx配置"></a>服务器nginx配置</h3></li></ol><ul><li>首先在home路径中建立www然后进入www再创建website目录 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;home</span><br><span class="line">mkdir www</span><br><span class="line">cd www</span><br><span class="line">mkdir website</span><br></pre></td></tr></table></figure></li><li>进入nginx目录修改nginx.conf文件,将server 80 端口下的root项改为 /home/www/website  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf</span><br><span class="line">vi nginx.conf</span><br></pre></td></tr></table></figure> <img src= "/img/loading.gif" data-lazy-src="https://wx2.sbimg.cn/2020/08/05/oDUsM.png" alt="编辑nginx.conf文件">  <h3 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h3> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">curl -sL https:&#x2F;&#x2F;rpm.nodesource.com&#x2F;setup_10.x | bash -</span><br><span class="line">yum install -y nodejs</span><br></pre></td></tr></table></figure><h4 id="检查是否安装成功"><a href="#检查是否安装成功" class="headerlink" title="检查是否安装成功"></a>检查是否安装成功</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><img src= "/img/loading.gif" data-lazy-src="https://wx2.sbimg.cn/2020/08/05/oPu6G.png" alt="安装检查">  <h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><div class="note info">            <p>全程依旧使用yum命令安装Git，安装期间提示y/s一律选择yes</p>          </div></li></ul><ol><li>安装Git及新建Git用户 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br><span class="line">git --version</span><br><span class="line">adduser git</span><br><span class="line">chmod 740 &#x2F;etc&#x2F;sudoers</span><br><span class="line">vi etc&#x2F;sudoers</span><br></pre></td></tr></table></figure></li><li>在打开的sudoers中如图片所在位置添加以下内容 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ALL&#x3D;(ALL)ALL</span><br></pre></td></tr></table></figure> <img src= "/img/loading.gif" data-lazy-src="https://wx2.sbimg.cn/2020/08/05/oPqbw.png" alt="在sudoers中添加语句">  </li><li>执行以下指令更改文件夹权限，切换git用户并建立密钥  <div class="note warning">            <p>这里的步骤至关重要！！！</p>          </div> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">chmod 400 &#x2F;etc&#x2F;sudoers</span><br><span class="line">sudo passwd git</span><br><span class="line">su git</span><br><span class="line">cd ~</span><br><span class="line">mkdir .ssh</span><br><span class="line">cd .ssh</span><br><span class="line">vi authorized_keys</span><br><span class="line">chmod 600 ~&#x2F;.ssh&#x2F;authorized_keys</span><br><span class="line">chmod 700 ~&#x2F;.ssh</span><br></pre></td></tr></table></figure> <img src= "/img/loading.gif" data-lazy-src="https://wx1.sbimg.cn/2020/08/07/ogtC6.png" alt="建立密钥"><br> <img src= "/img/loading.gif" data-lazy-src="https://wx2.sbimg.cn/2020/08/07/ogwLO.png" alt="加权限">  </li><li>创建git仓库且添加钩子文件 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">git init --bare blog.git</span><br><span class="line">vi ~&#x2F;blog.git&#x2F;hooks&#x2F;post-receive</span><br></pre></td></tr></table></figure></li><li>在post-receive中输入 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --work-tree&#x3D;&#x2F;home&#x2F;www&#x2F;website --git-dir&#x3D;&#x2F;home&#x2F;git&#x2F;blog.git checkout -f</span><br></pre></td></tr></table></figure></li><li>保存退出给文件加权限 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ~&#x2F;blog.git&#x2F;hooks&#x2F;post-receive</span><br></pre></td></tr></table></figure><div class="note warning">            <p>注意以上指令都需在git用户下执行，若中途断开需重新执行su git指令进入git账户！！</p>          </div></li><li>在之前root用户中新建的/home/www/website文件夹中添加文件权限 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line">chmod 777 &#x2F;home&#x2F;www&#x2F;website</span><br><span class="line">chmod 777 &#x2F;home&#x2F;www</span><br></pre></td></tr></table></figure></li><li>切换到本地电脑，在本地git窗口中输入 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -o StrictHostKeyChecking&#x3D;no git@你的服务器地址</span><br></pre></td></tr></table></figure><div class="note info">            <p>返回结果如下则成功！</p>          </div><img src= "/img/loading.gif" data-lazy-src="https://wx2.sbimg.cn/2020/08/07/ogHXD.png" alt="返回结果"><h2 id="本地配置文件修改"><a href="#本地配置文件修改" class="headerlink" title="本地配置文件修改"></a>本地配置文件修改</h2></li></ol><ul><li>修改hexo目录下的_config.yml文件  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo: git@服务器地址:&#x2F;home&#x2F;git&#x2F;blog.git</span><br></pre></td></tr></table></figure><img src= "/img/loading.gif" data-lazy-src="https://wx2.sbimg.cn/2020/08/07/oga9n.png" alt="修改配置文件"></li></ul><h3 id="编写nginx启动脚本"><a href="#编写nginx启动脚本" class="headerlink" title="编写nginx启动脚本"></a>编写nginx启动脚本</h3><p> 在/etc/init.d/路径下添加以下脚本文件，名称改为nginx </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">#Startup script for the nginx Web Server</span><br><span class="line">#chkconfig: 2345 85 15</span><br><span class="line">nginx&#x3D;&#x2F;usr&#x2F;localinx&#x2F;sbininx</span><br><span class="line">conf&#x3D;&#x2F;usr&#x2F;localinx&#x2F;confinx.conf</span><br><span class="line">case $1 in </span><br><span class="line">start)</span><br><span class="line">echo -n &quot;Starting Nginx&quot;</span><br><span class="line">$nginx -c $conf</span><br><span class="line">echo &quot; done.&quot;</span><br><span class="line">;;</span><br><span class="line">stop)</span><br><span class="line">echo -n &quot;Stopping Nginx&quot;</span><br><span class="line">killall -9 nginx</span><br><span class="line">echo &quot; done.&quot;</span><br><span class="line">;;</span><br><span class="line">test)</span><br><span class="line">$nginx -t -c $conf</span><br><span class="line">echo &quot;Success.&quot;</span><br><span class="line">;;</span><br><span class="line">reload)</span><br><span class="line">echo -n &quot;Reloading Nginx&quot;</span><br><span class="line">ps auxww | grep nginx | grep master | awk &#39;&#123;print $2&#125;&#39; | xargs kill -HUP</span><br><span class="line">echo &quot; done.&quot;</span><br><span class="line">;;</span><br><span class="line">restart)</span><br><span class="line">$nginx -s reload</span><br><span class="line">echo &quot;reload done.&quot;</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo &quot;Usage: $0 &#123;start|restart|reload|stop|test|show&#125;&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h3 id="为nginx启动脚本添加权限"><a href="#为nginx启动脚本添加权限" class="headerlink" title="为nginx启动脚本添加权限"></a>为nginx启动脚本添加权限</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x nginx</span><br></pre></td></tr></table></figure><h3 id="脚本控制命令"><a href="#脚本控制命令" class="headerlink" title="脚本控制命令"></a>脚本控制命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service nginx start  &#x2F;&#x2F;启动</span><br><span class="line">service nginx stop   &#x2F;&#x2F;停止</span><br><span class="line">service nginx reload  &#x2F;&#x2F;重启</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://wx1.sbimg.cn/2020/08/07/ognCa.png" alt="命令执行效果">  </p><h1 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo deploy</span><br><span class="line">git pull </span><br></pre></td></tr></table></figure><div class="note success">            <p>至此搭建完成，可以开始编写自己的博客内容了<del>~</del></p>          </div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> 建站 </tag>
            
            <tag> hexo </tag>
            
            <tag> centos7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站的第一篇文章</title>
      <link href="/13095.html"/>
      <url>/13095.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="本博客用阿里云-hexo搭建"><a href="#本博客用阿里云-hexo搭建" class="headerlink" title="本博客用阿里云+hexo搭建"></a>本博客用阿里云+hexo搭建</h1><p>实话实说搭建起来挺简单的，就莫名其妙会多很多很多小问题，过几天出个教程文章哈哈哈哈</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello God-x Blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
