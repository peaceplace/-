<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>阿里云+hexo搭建个人博客教程（基于centos7.8）</title>
      <link href="/35661.html"/>
      <url>/35661.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>此教程默认你会一些基础的linux系统命令，譬如cd,mkdir, chmod等，以及基础的windows系统常用的cmd命令，如果不清楚这些命令，建议你请不要继续看下去~</p></blockquote><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><ol><li><p>拥有一台阿里云的服务器和已经购买好域名且操作系统镜像为centos7以上</p><blockquote><p>这里默认你已经买好域名且已经实名认证</p></blockquote></li><li><p>本次教程所需要的软件<br> a. FileZilla (用于上传和下载服务器文件)</p><blockquote><p><a href="https://filezilla-project.org/download.php?type=client" target="_blank" rel="noopener">https://filezilla-project.org/download.php?type=client</a>  </p></blockquote><p> b. Putty (SSH/Telent客户端，用于连接服务器的终端)</p><blockquote><p><a href="https://github.com/larryli/PuTTY/releases" target="_blank" rel="noopener">https://github.com/larryli/PuTTY/releases</a>  </p></blockquote><p> c. git (用于发布Hexo博客到服务器端的软件)</p><blockquote><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a></p></blockquote></li></ol><p>一切准备就绪后就开始正式的搭建之旅吧~</p><h2 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h2><h3 id="在本地计算机安装Hexo环境"><a href="#在本地计算机安装Hexo环境" class="headerlink" title="在本地计算机安装Hexo环境"></a>在本地计算机安装Hexo环境</h3><p> 博主本地环境：Windows 10 （64位）  </p><ol><li><p>安装Node.js<br> 自行去Node.js官网下载Windows（X64）长期支持版（LTS）按提示逐步安装。安装完成后打开windows自带的cmd窗口输入以下命令查看版本号验证是否安装成功。    </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\用户名&gt; node -v</span><br><span class="line">C:\Users\用户名&gt; npm -v</span><br></pre></td></tr></table></figure></li><li><p>在自己电脑上的D盘或E盘创建名为”myblog”的文件夹</p></li><li><p>选中文件夹鼠标右击选择”Git Bash Here”  </p><p> <img src= "/img/loading.gif" data-src="https://wx1.sbimg.cn/2020/08/01/PEaoY.jpg" alt="右击选择" title="右击选择红框内容"></p></li><li><p>在弹出的CMD框中输入  </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p> 此命令是用来安装hexo在创建的文件夹中  </p></li><li><p>Hexo安装完成后，在myblog文件夹下新建myblogs项目，并且对其进行初始化的操作  </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init myblogs</span><br><span class="line">cd myblogs</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>此时，会在myblog的文件夹下新建一个名为myblogs的文件夹，并且还会在此文件夹下生成相应的项目文件，如图所示<br> <img src= "/img/loading.gif" data-src="https://wx2.sbimg.cn/2020/08/01/PEvqA.png" alt="生成的文件">  </p></li><li><p>返回到git的窗口中，输入以下命令即可在本地启动hexo服务  </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>等待出现”INFO  Hexo is running at <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> . Press Ctrl+C to stop.”后<br>打开浏览器，在浏览器地址输入  </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost:4000</span><br></pre></td></tr></table></figure><p>即可访问基于Hexo的个人博客主页了~<br> <img src= "/img/loading.gif" data-src="https://wx1.sbimg.cn/2020/08/01/PEUEV.jpg" alt="个人博客本地主页">  </p></li></ol><blockquote><p>目前为止本地计算机的操作暂告一段落  </p></blockquote><h3 id="服务器端准备工作"><a href="#服务器端准备工作" class="headerlink" title="服务器端准备工作"></a>服务器端准备工作</h3><blockquote><p>此时默认你会使用putty连接服务器且能够在阿里云服务器的控制台添加安全组和更改root密码   </p></blockquote><ol><li>在服务器上安装nginx<br>因为我们需要用nginx作为我们web服务器，所以我们要先安装nginx服务。具体操作如下：<br>使用root用户远程登录阿里云服务器后，使用yum命令进行安装，首先需安装nginx需要的相关的依赖库~   </li></ol><ul><li>1.1 安装gcc gcc-c++  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc gcc-c++</span><br></pre></td></tr></table></figure></li><li>1.2 安装PCRE库    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y pcre pcre-devel</span><br></pre></td></tr></table></figure></li><li>1.3 安装openssl、zlib、gcc依赖  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y zlib zlib-devel</span><br><span class="line">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure></li><li>1.4 下载nginx安装包  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c https:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.10.1.tar.gz</span><br></pre></td></tr></table></figure></li><li>1.5 将安装包解压到/usr/local/目录下  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf nginx-1.10.1.tar.gz -C &#x2F;usr&#x2F;local</span><br></pre></td></tr></table></figure></li><li>1.6 进入/usr/local目录，确认nginx是否解压到该目录下，进入nginx-1.10.1的目录中，会发现有一个./configure的可执行文件，执行该配置文件  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local</span><br><span class="line">ls</span><br><span class="line">cd nginx-1.10.1&#x2F;</span><br><span class="line">.&#x2F;configure</span><br></pre></td></tr></table></figure></li><li>1.7 编译并安装nginx  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li><li>1.8 查找nginx安装目录且进入安装目录  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">whereis nginx</span><br><span class="line">cd &#x2F;usr&#x2F;local&#x2F;nginx</span><br><span class="line">ls</span><br></pre></td></tr></table></figure></li><li>1.9 防火墙开启80端口访问（此时你应在阿里云控制台中创建安全组开启所有IP进方向80端口可访问）默认linux不会开启80端口  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld  &#x2F;&#x2F;检查防火墙是否开启，若显示failed则为开启</span><br><span class="line">systemctl start firewalld &#x2F;&#x2F;开启为start关闭则改为stop</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>服务器nginx配置</li></ol><ul><li>2.1 首先在home路径中建立www然后进入www再创建website目录  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;home</span><br><span class="line">mkdir www</span><br><span class="line">cd www</span><br><span class="line">mkdir website</span><br></pre></td></tr></table></figure></li><li>2.2 进入nginx目录修改nginx.conf文件,将server 80 端口下的root项改为 /home/www/website   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf</span><br><span class="line">vi nginx.conf</span><br></pre></td></tr></table></figure>  <img src= "/img/loading.gif" data-src="https://wx2.sbimg.cn/2020/08/05/oDUsM.png" alt="编辑nginx.conf文件">  </li></ul><ol start="3"><li>安装node.js  </li></ol><ul><li>3.1 安装node.js  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">curl -sL https:&#x2F;&#x2F;rpm.nodesource.com&#x2F;setup_10.x | bash -</span><br><span class="line">yum install -y nodejs</span><br></pre></td></tr></table></figure></li><li>3.2 检查是否安装成功  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    node -v</span><br><span class="line">    npm -v</span><br><span class="line">    &#96;&#96;&#96;  </span><br><span class="line">    ![安装检查](https:&#x2F;&#x2F;wx2.sbimg.cn&#x2F;2020&#x2F;08&#x2F;05&#x2F;oPu6G.png)  </span><br><span class="line">4. 安装Git  </span><br><span class="line">&gt;全程依旧使用yum命令安装Git，安装期间提示y&#x2F;s一律选择yes  </span><br><span class="line">- 4.1 安装Git及新建Git用户</span><br></pre></td></tr></table></figure>  yum install git<br>  git –version<br>  adduser git<br>  chmod 740 /etc/sudoers<br>  vi etc/sudoers  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- 4.2 在打开的sudoers中如图片所在位置添加以下内容</span><br></pre></td></tr></table></figure>  git ALL=(ALL)ALL<pre><code>![在sudoers中添加语句](https://wx2.sbimg.cn/2020/08/05/oPqbw.png)  </code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> 建站 </tag>
            
            <tag> hexo </tag>
            
            <tag> centos7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站的第一篇文章</title>
      <link href="/13095.html"/>
      <url>/13095.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="本博客用阿里云-hexo搭建"><a href="#本博客用阿里云-hexo搭建" class="headerlink" title="本博客用阿里云+hexo搭建"></a>本博客用阿里云+hexo搭建</h1><p>实话实说搭建起来挺简单的，就莫名其妙会多很多很多小问题，过几天出个教程文章哈哈哈哈</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello God-x Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/16107.html"/>
      <url>/16107.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
